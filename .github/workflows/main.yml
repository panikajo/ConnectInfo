name: .NET

on:
  push:
    paths-ignore:
    - LICENSE
    - README.md
  pull_request:
    paths-ignore:
    - LICENSE
    - README.md

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Prepare env
        shell: bash
        run: echo "GITHUB_SHA_SHORT=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Checking out own repository
        uses: actions/checkout@v3

      - name: Download CounterStrikeSharp.API.dll
        shell: bash
        run: |
          for item in $(curl -s https://api.github.com/repos/roflmuffin/CounterStrikeSharp/actions/artifacts?per_page=4 | jq -r -c '.artifacts[]');
          do
            if [[ $(echo $item | jq -r -c '.name') == "counterstrikesharp-build-api"* ]]; then
              curl -s -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" $(echo $item | jq -r -c '.archive_download_url') -o counterstrikesharp-api.zip
              break
            fi
          done
          unzip -j counterstrikesharp-api.zip net7.0/publish/CounterStrikeSharp.API.dll

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x

      - name: Build
        working-directory: src
        run: dotnet publish -c release -r linux-x64 --no-self-contained -p:DebugSymbols=false -p:DebugType=None -o publish

      - name: Uploading package
        uses: actions/upload-artifact@v3
        with:
          name: Plugin-${{ env.GITHUB_SHA_SHORT }}
          path: src/publish

  release:
    name: Release
    if: github.ref_type == 'tag'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3

      - name: Arhive Assets
        shell: bash
        run: find * -maxdepth 0 -type d -exec zip -r {}.zip {} \;

      - name: Create Release
        shell: bash
        run: gh release create ${{ github.ref_name }} --title ${{ github.ref_name }} --latest -R ${{ github.repository }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload assets
        shell: bash
        run: gh release upload ${{ github.ref_name }} *.zip -R ${{ github.repository }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
